# ---------------------------------------------------------------------------------
# Note: The property global.dir is specified in this module's build.xml.  Make sure
# this is set properly, especially if you are building a nested module structure
#

# ---------------------------------------------------------------------------------
# This properties file is used to identify the name of this module and any
# specific values for tasks unique to this module
#
# these identify the module tree structure of this deployed submodule.  Usually 
# you'd leave all but ${module.name} alone.
#
install.unit=${default.install.unit}
module.parent=${module.root.parent}/EStore/Versioned
module.name=base


deploy.definition.file=${default.deploy.definition.file}

# ---------------------------------------------------------------------------------
# J2EE Deployment settings
#
install.dir=${dynamo.root.dir}/${install.unit}/${module.parent}/${module.name}
install.j2ee.dir=${install.dir}/j2ee-apps


# This value is used for deployments to application servers other than DAS.  
# It exists because the deployment tasks are specific to J2EE assets (JSPs) and not 
# ATG module assets (config & classes).  
# 
# Because deployment tasks are specific to J2EE assets, this framework must treat these assets 
# differently depending upon application server.  
#
# With DAS the J2EE applications are stored beneath each module which allows the ANT framework to 
# control deployments at the ATG module level.
#
# However other application servers require an .ear file comprised of multiple ATG modules.  
# The master common.properties file specifies the .ear files to deploy and the underlying
# ATG modules deployed in those ears.  Each ear file deployed is given a prefix of the 
# pattern "ear.earname".  
#
# This ANT framework recognizes that you may invoke the deploy task at the sub-module level.  This
# likely requires more modules to be deployed than just the sub-module the deploy task is called 
# from.  To solve this we install an ears.to.assemble.id at the sub-module level.  This 
# tells the deploy process to refer to the common.properties file to depoy all ATG modules 
# registered against that id.
#
# The following prefix references the settings in the common.properties file to 
# identify which ATG modules need to be deployed when this module's "deploy" task is 
# invoked at this level.
# 
ears.to.assemble.id=ear.GHStore

# Here's how you would define a class library reference to another project.  
#
classpath=${dynamo.root.dir}/${install.unit}/${module.root.parent}/EStore/lib/classes.jar

# ---------------------------------------------------------------------------------
# SQL Settings

# There are situations where the user sets the master ${username}.properties file to 
# build the store-ca module in conjunction with other modules.  In this situation, 
# invoking ‘ant createtables’ or ‘ant droptables’ will also destroy any Content 
# Administration tables.  In practice this is not desired as the CA tables are often 
# meant to be intact during development.  This setting will prevent the system from 
# running create or drop scripts against the CA schemas.  Note: The user would need to 
# set this after they have run the creation scripts for CA
#
pub.createdrop.coreschema=true
pub.createdrop.verschema=true


# This property allows ANT to copy sql from a "common" sql directory preventing the 
# need to duplicate sql statements in this sub-module.
#
sql.main.dir=${basedir}/../sql


# accessing the sql in the main directory allows us to re-use the ddls there and minimize the number of ddls
# we have to maintain beneath this module.
#
sql.install.dir=${install.dir}/sql/${database.type}/install
sql.uninstall.dir=${install.dir}/sql/${database.type}/uninstall

# Install ATG Tables
sql.install.atg.appserver=${sql.install.dir}/00_atg_das.sql
sql.install.atg.core=${sql.install.dir}/01_atg_core.sql
sql.install.atg.catalog=${sql.install.dir}/merch_02_ver_catalog.sql
sql.install.atg.commerceuser=${sql.install.dir}/03_atg_commerce_user.sql
sql.install.atg.privileges=${sql.install.dir}/04_atg_privileges.sql
sql.install.atg.reports1=${sql.install.dir}/05_atg_reporting_views.sql
sql.install.atg.reports2=${sql.install.dir}/06_atg_reporting_views1.sql
sql.install.atg.reports3=${sql.install.dir}/07_atg_reporting_views2.sql
sql.install.atg.reports4=${sql.install.dir}/08_atg_reporting_views3.sql

sql.install.atg.bizui.core=${sql.install.dir}/ca_01_atg_core.sql

# Install Project Specific Tables
sql.install.proj.core=${sql.install.dir}/09_anntaylor_core.sql

# Install Versioned tables
sql.install.proj.core.ver=${sql.install.dir}/ca_02_anntaylor_core_ver.sql

#CampaignOptimizer tables
sql.install.proj.campaignoptimizer.core=${sql.install.dir}/01_campaignoptimizer_core.sql
sql.install.proj.campaignoptimizer.ver=${sql.install.dir}/01_campaignoptimizer_versioned.sql

# Uninstall all tables
sql.uninstall.alltables=${sql.uninstall.dir}/99_drop_all_tables.sql

